day,title,link,duration,tags,highlights,prerequisites
1,How Amazon Aurora Achieves Durability with Quorum Writes | Aurora Paper Deep Dive - Section 2,https://www.youtube.com/watch?v=EaWlpn24eAs,1160,"system-design,database",How Amazon Aurora Achieves Durability,
1,What the heck is Storage-Compute Separation? | Aurora Paper Deep Dive - Section 1,https://www.youtube.com/watch?v=DA5W8tO_7Nw,1029,"system-design,database",What the heck is Storage-Compute,
1,What are Reactive Databases and why DiceDB exists?,https://www.youtube.com/watch?v=V6hi86woFl8,597,"database,system-design",What are Reactive Databases and,
1,Synonymic Query Expansion to handle Prashant in Search - Lexical vs Phonetic vs Semantic Search,https://www.youtube.com/watch?v=gZIVHSFgkvk,923,"system-design,database",Synonymic Query Expansion to handle,
1,Announcing DiceDB 1.0,https://www.youtube.com/watch?v=1hGwZ-IeN6M,474,"system-design,database,cache",Announcing DiceDB 1.0,
1,How Atlassian reduced latency by 70% by using Sidecar pattern and when should you use it,https://www.youtube.com/watch?v=IsM4bnJ-8Gw,770,"system-design,database",How Atlassian reduced latency by,
1,How BitBucket reduced master database load by 50% and also solved Read your Write consistency,https://www.youtube.com/watch?v=sbDVs71wIVk,1125,"database,system-design",How BitBucket reduced master database,
1,"Saved 55% cost, 75% CPU, at 33x speed - Why and how Jira moved from JSON to Protobuf",https://www.youtube.com/watch?v=roNgG4QVjTU,918,"system-design,database","Saved 55% cost, 75% CPU,",
2,"On learning how to Learn, Career Growth & AMA",https://www.youtube.com/watch?v=xxtaQu9i7i4,5249,"system-design,database","On learning how to Learn,",
2,Why and how Trello moved away from RabbitMQ to Kafka for their WebSocket-based real-time updates,https://www.youtube.com/watch?v=LJzS6dUV-GE,1389,"system-design,database",Why and how Trello moved,
3,How hard it is to build an Open Source product in India!,https://www.youtube.com/watch?v=pqk3He2iPZw,6766,system-design,How hard it is to,
3,Cache Invalidation using SNS + SQS at Atlassian and then they moved away!,https://www.youtube.com/watch?v=fJNyTNP71MM,880,"cache,system-design,database",Cache Invalidation using SNS +,
4,Load Balancers are not Magic - Dissecting Atlassian Outage,https://www.youtube.com/watch?v=KwGyA6B7qrI,787,"system-design,database",Load Balancers are not Magic,
4,Amazon DynamoDB - Paper Explained,https://www.youtube.com/watch?v=LnqKfLcszEg,5581,"system-design,database",Amazon DynamoDB - Paper Explained,
5,Everything about HTTP Streaming and how Airbnb leverages it in production,https://www.youtube.com/watch?v=wrURmYwqYb4,1324,"system-design,database",Everything about HTTP Streaming and,
5,Write code that matters,https://www.youtube.com/watch?v=XuMjUcdITG4,56,"system-design,database",Write code that matters,
5,A bug in the GitHub's Rate Limiter,https://www.youtube.com/watch?v=LAdUhenKDJ8,1115,"system-design,database,cache",A bug in the GitHub's,
5,When should you rewrite from scratch? Rewrite vs Reuse,https://www.youtube.com/watch?v=3wfzXvvnSAU,59,system-design,When should you rewrite from,
5,"To write good APIs, follow Postel's Law",https://www.youtube.com/watch?v=AO1CBctOhrk,60,"system-design,database","To write good APIs, follow",
5,DragonflyDB does not use HashTables but DashTables to hold the data - a deep dive,https://www.youtube.com/watch?v=MOLG4-IovOQ,820,"system-design,database",DragonflyDB does not use HashTables,
5,Two projects that every engineer should do in C language are ...,https://www.youtube.com/watch?v=UadmRMr1JfQ,60,"system-design,database",Two projects that every engineer,
5,Why DragonflyDB uses B+ Trees to implement Sorted Set instead of Skiplist like Redis?,https://www.youtube.com/watch?v=z-yC2o4GZvg,553,"system-design,database",Why DragonflyDB uses B+ Trees,
5,Never learn a similar programming language. Pick one that ...,https://www.youtube.com/watch?v=ffeQxEfaWi0,59,"system-design,database",Never learn a similar programming,
5,Why blame Microsoft? Here's the actual root cause of the CrowdStrike Outage,https://www.youtube.com/watch?v=NZTne3fiM-o,51,"system-design,database",Why blame Microsoft? Here's the,
5,"How DragonflyDB implements ""distributed"" transactions in a shared-nothing setup",https://www.youtube.com/watch?v=GsuxpMTnDRM,609,"system-design,database","How DragonflyDB implements ""distributed"" transactions",
5,Latency vs Response Time,https://www.youtube.com/watch?v=rESRQ_lke48,47,"system-design,database",Latency vs Response Time,
5,When your database ID hits MAX_INT,https://www.youtube.com/watch?v=NbKbMfdO8gE,57,"database,system-design",When your database ID hits,
5,"DragonflyDB Architecture Overview, Internals, and Trade-offs - hitting 6.43 million ops/sec",https://www.youtube.com/watch?v=XbV1LoVsbME,511,"system-design,database","DragonflyDB Architecture Overview, Internals, and",
5,"TCP TIME_WAIT causing ""address already in use"" error",https://www.youtube.com/watch?v=c1QI7r9AP_g,60,system-design,"TCP TIME_WAIT causing ""address already",
5,"Internals, architecture, and interesting trade-offs of Blacksmith that runs GitHub Actions 2x faster",https://www.youtube.com/watch?v=q_2nkMBuLQQ,496,system-design,"Internals, architecture, and interesting trade-offs",
5,How LinkedIn improved their latency by 60%,https://www.youtube.com/watch?v=DgNncAnhkIY,600,system-design,How LinkedIn improved their latency,
5,Designing a Realtime Gaming Leaderboard - Horizontally Scalable and Highly Available,https://www.youtube.com/watch?v=UerkzwZ_zSY,633,"system-design,database",Designing a Realtime Gaming Leaderboard,
6,How Rockset achieves zero data latency and workload isolation at scale,https://www.youtube.com/watch?v=DF8BbwtEa7k,787,"system-design,database",How Rockset achieves zero data,
6,How Rockset executes query and scales the query compute horizontally on demand | Rockset Internals,https://www.youtube.com/watch?v=HWeTVy5i9vE,595,"system-design,database",How Rockset executes query and,
6,How Converged Indexes makes Rockset super-efficient in all kinds of queries | Rockset Internals,https://www.youtube.com/watch?v=xGaUJTHuehQ,662,"system-design,database",How Converged Indexes makes Rockset,
6,Architecture deep-dive of a Real-time Analytics Database | Rockset Internals,https://www.youtube.com/watch?v=I4eEEAgoCig,526,"database,system-design",Architecture deep-dive of a Real-time,
6,How JioCinema live streams IPL to 20 million concurrent devices w/ Prachi Sharma | Ep 7,https://www.youtube.com/watch?v=36N1Bz7qW0A,2732,system-design,How JioCinema live streams IPL,
6,How Reddit designed their metadata store to serve 100k req/sec at p99 of 17ms,https://www.youtube.com/watch?v=b9zh0SFbkqM,439,system-design,How Reddit designed their metadata,
6,How PostgreSQL generates all possible query execution plans before choosing the best one.,https://www.youtube.com/watch?v=pj7Fxr8cUJI,513,"system-design,database",How PostgreSQL generates all possible,
6,"How nested loop, hash, and merge joins work.",https://www.youtube.com/watch?v=-htbah3eCYg,668,"system-design,database","How nested loop, hash, and",
7,How PostgreSQL parses the query and constructs the Parse Tree?,https://www.youtube.com/watch?v=m8PtOY3aWL0,485,"system-design,database",How PostgreSQL parses the query,
7,PostgreSQL connection management and per-client process model explained,https://www.youtube.com/watch?v=o7qLKfILuD8,514,"system-design,database",PostgreSQL connection management and per-client,
7,How DNS really works and how it scales infinitely?,https://www.youtube.com/watch?v=g_gKI2HCElk,995,system-design,How DNS really works and,
7,"Understanding Proxy, Forward Proxy, and Reverse Proxy",https://www.youtube.com/watch?v=HrG0MHkSsCA,581,"system-design,database","Understanding Proxy, Forward Proxy, and",
7,What happens when you type a URL into your browser?,https://www.youtube.com/watch?v=4lb3dAtKcJo,614,system-design,What happens when you type,
8,Everything you need to know about CockroachDB w/ Ben Darnell | Ep 6,https://www.youtube.com/watch?v=yhqW82Ka-gw,5403,"system-design,database",Everything you need to know,
8,What exactly is the HTTP protocol and how to write a new one from scratch?,https://www.youtube.com/watch?v=SzwjnoPI--M,870,system-design,What exactly is the HTTP,
9,"How indexes work in Distributed Databases, their trade-offs, and challenges",https://www.youtube.com/watch?v=eQ3eNd5WbH8,981,"database,system-design",How indexes work in Distributed,
9,Understanding Database Trade-offs - The RUM Conjecture - Paper Explained,https://www.youtube.com/watch?v=ZxvulmKXIto,497,"database,system-design",Understanding Database Trade-offs - The,
9,The Google File System - Paper Explained,https://www.youtube.com/watch?v=LXhgFAZroG8,4534,"system-design,database",The Google File System -,
9,Why thread pools even exist? and how to implement them?,https://www.youtube.com/watch?v=NgYS6mIUYmA,569,system-design,Why thread pools even exist?,
9,Picking the right string column datatype - CHAR vs VARCHAR vs TEXT,https://www.youtube.com/watch?v=wOAfvwDxsTo,583,"system-design,database",Picking the right string column,
10,The compression algorithm that powers all Time-series Databases,https://www.youtube.com/watch?v=J7VJtuRCkuI,804,"database,system-design",The compression algorithm that powers,
10,How databases store and transmit integers efficiently using varint encoding,https://www.youtube.com/watch?v=9b2e_iRVJ0k,902,"database,system-design",How databases store and transmit,
10,How Pass by Value and Pass By Pointer work internally? Peeking into the assembly code to find out,https://www.youtube.com/watch?v=-dVuyTMByBA,905,system-design,How Pass by Value and,
10,How to start your writing journey as a software engineer,https://www.youtube.com/watch?v=SZmPgTozvcI,668,system-design,How to start your writing,
10,Everything you need to know about Read Uncommitted Isolation Level,https://www.youtube.com/watch?v=AiPGbVjl3JY,621,"system-design,database",Everything you need to know,
10,Disabling Garbage Collection helped Instagram save money and get better performance,https://www.youtube.com/watch?v=Zqw4KjhWxEc,2924,"system-design,python",Disabling Garbage Collection helped Instagram,
11,How Google designed their Highly Available Load Balancers using Anycast,https://www.youtube.com/watch?v=WjT253DBlXk,2720,system-design,How Google designed their Highly,
11,CAP Theorem - From the First Principles,https://www.youtube.com/watch?v=--YbYCfMnxc,2562,system-design,CAP Theorem - From the,
12,How Dukaan moved out of Cloud and on to Bare Metal w/ Subhash | Ep 5,https://www.youtube.com/watch?v=vFxQyZX84Ro,5828,system-design,How Dukaan moved out of,
12,Navigating Massive Codebases - From the First Principles,https://www.youtube.com/watch?v=xtpmWyMYd5w,4117,system-design,Navigating Massive Codebases - From,
13,Bloom Filters - From the First Principles,https://www.youtube.com/watch?v=mItewjU-YG8,4976,system-design,Bloom Filters - From the,
13,If I were to learn a new programming language,https://www.youtube.com/watch?v=vQB1YW7YW7g,566,system-design,If I were to learn,
13,"Optimistic Locking - What, When, Why, and How?",https://www.youtube.com/watch?v=eMotoFvgdUo,994,system-design,"Optimistic Locking - What, When,",
14,How to decide which technology to learn and invest time in?,https://www.youtube.com/watch?v=z8m_iKCPTaQ,1144,system-design,How to decide which technology,
14,How to write deadlock free code?,https://www.youtube.com/watch?v=Vk2BEiYGeQc,1271,"system-design,database",How to write deadlock free,
14,How to write a Concurrent Thread-safe Queue from scratch?,https://www.youtube.com/watch?v=oYoVx8ZuvTw,1034,"queue,system-design",How to write a Concurrent,
14,I changed python language and added a new NUKE statement,https://www.youtube.com/watch?v=mLNNKl0oGiQ,1272,"python,system-design",I changed python language and,
14,Understanding Pessimistic Locking with Mutex,https://www.youtube.com/watch?v=4F-WiPFrPsA,610,system-design,Understanding Pessimistic Locking with Mutex,
14,What should a software developer not do?,https://www.youtube.com/watch?v=rBUVdZRkd0A,655,system-design,What should a software developer,
14,I changed the Python print statement to understand how it works internally,https://www.youtube.com/watch?v=vuZO4qzjCdQ,1110,"python,system-design",I changed the Python print,
15,Bloom Filters - Live Coding,https://www.youtube.com/watch?v=UVFnabieyzc,6145,system-design,Bloom Filters - Live Coding,
15,Peeking into assembly code to understand why count++ is not atomic,https://www.youtube.com/watch?v=kBHd7kn_1EU,852,system-design,Peeking into assembly code to,
16,How JunoDB is designed to be a highly secure database,https://www.youtube.com/watch?v=-YxWRxOFgRY,732,"database,system-design",How JunoDB is designed to,
16,How JunoDB is designed to achieve six 9's of availability,https://www.youtube.com/watch?v=2V_oP5xCbO4,811,"system-design,database",How JunoDB is designed to,
16,How JunoDB is designed to scale horizontally,https://www.youtube.com/watch?v=6ljQaZAm8Rk,984,"system-design,database",How JunoDB is designed to,
16,High level architecture and System Design of JunoDB,https://www.youtube.com/watch?v=2Bwzh-881PU,820,"system-design,database",High level architecture and System,
16,Overview of JunoDB - an open source KV store by PayPal,https://www.youtube.com/watch?v=Jddce8sPFsc,1058,"system-design,database,cache",Overview of JunoDB - an,
16,"My process of reading, understanding, and remembering research papers",https://www.youtube.com/watch?v=V5-KxHdmbDo,868,system-design,"My process of reading, understanding,",
16,My first change in a massive open source CPython codebase,https://www.youtube.com/watch?v=UmF57P7TerI,779,"python,system-design",My first change in a,
17,Will AI replace programmers?,https://www.youtube.com/watch?v=ejMrCESahz8,1314,system-design,Will AI replace programmers?,
17,How to learn better and faster as a software engineer?,https://www.youtube.com/watch?v=Je5WBk91Wlc,897,system-design,How to learn better and,
17,Why most TCP servers are multi threaded and how to build one from scratch,https://www.youtube.com/watch?v=f9gUFy-9uCM,1708,system-design,Why most TCP servers are,
17,Understanding Endianness: Little vs Big-Endian and its Impact on data storage and transmission,https://www.youtube.com/watch?v=_ZgM21T48WA,1216,system-design,Understanding Endianness: Little vs Big-Endian,
17,Datetime vs Timestamp datatype in databases - Which one is better and when?,https://www.youtube.com/watch?v=zrl_odkY5tI,790,"database,system-design",Datetime vs Timestamp datatype in,
17,How to write efficient and fair multi-threaded programs?,https://www.youtube.com/watch?v=2PjlaUnrAMQ,1166,system-design,How to write efficient and,
18,Understanding Phantom Reads Problem with hands on examples,https://www.youtube.com/watch?v=n_t0IO0mq5Q,758,"system-design,database",Understanding Phantom Reads Problem with,
18,Why do databases store data in B+ trees?,https://www.youtube.com/watch?v=09E-tVAUqQw,1783,"database,system-design",Why do databases store data,
18,The right mindset to craft a great career w/ Shashank Kansal | Ep 4,https://www.youtube.com/watch?v=jU-4FKh0NXI,3830,system-design,The right mindset to craft,
18,How to get a promotion and become a Staff Engineer at FAANG,https://www.youtube.com/watch?v=NJjJctW-K0g,491,system-design,How to get a promotion,
19,Career Growth and Acceleration for Software Engineers - Live QnA 001,https://www.youtube.com/watch?v=pXZFZQrg3_Q,2953,system-design,Career Growth and Acceleration for,
19,Asli Engineering by Arpit Bhayani Live Stream,https://www.youtube.com/watch?v=tfYa4-XNe_c,0,system-design,Asli Engineering by Arpit Bhayani,
19,The engineering behind LLMs w/ Ramsri | Ep 3,https://www.youtube.com/watch?v=Zz1pBnGmBYQ,2881,system-design,The engineering behind LLMs w/,
19,Building my second brain and becoming 10x productive as a software engineer,https://www.youtube.com/watch?v=47ARX-6srGk,1163,general,Building my second brain and,
20,Thundering Herd Problem and How not to do API retries,https://www.youtube.com/watch?v=8sTuCPh3s0s,644,system-design,Thundering Herd Problem and How,
20,Designing Idempotent API Endpoints for Payments at Stripe,https://www.youtube.com/watch?v=J2IcD9FZvZU,866,system-design,Designing Idempotent API Endpoints for,
20,How Slack efficiently classifies emails at scale with an eventually consistent system,https://www.youtube.com/watch?v=BwxU9EnCFXA,1399,"system-design,queue,database",How Slack efficiently classifies emails,
20,Everything you need to know about CRDTs w/ Vipul Vaibhaw | Ep 2,https://www.youtube.com/watch?v=Paau_t0aZKw,1739,"system-design,database",Everything you need to know,
20,How @ShopifyEngineering avoids hot shards by moving data across databases without any downtime,https://www.youtube.com/watch?v=7v-wrJjcg4k,1258,"database,system-design",How @ShopifyEngineering avoids hot shards,
20,How Grab configured their data layer to handle multi-million database transactions a day!,https://www.youtube.com/watch?v=KeV4erIm47o,1224,"database,system-design",How Grab configured their data,
21,How Twitter keeps its Search systems up and stable at scale,https://www.youtube.com/watch?v=dOyCq_mMtdI,900,system-design,How Twitter keeps its Search,
21,How @zomato improved its search by identifying intent using NLP,https://www.youtube.com/watch?v=JL9x9N6YSUc,1605,system-design,How @zomato improved its search,
21,Razorpay's Journey to Microservices w/ Arjun | Ep 1,https://www.youtube.com/watch?v=yqkyq8TPWbg,2988,"system-design,database",Razorpay's Journey to Microservices w/,
21,Designing Uber's highly available Emergency SOS Service,https://www.youtube.com/watch?v=gpzGpPiRoCo,1227,"system-design,queue",Designing Uber's highly available Emergency,
22,How Booking com designed and scaled their highly available and performant User Review System,https://www.youtube.com/watch?v=BFyWl9MNDjY,1306,"system-design,database",How Booking com designed and,
22,Overview of Discord's data platform that daily processes petabytes of data and trillion points,https://www.youtube.com/watch?v=yGpEzO32lU4,1320,system-design,Overview of Discord's data platform,
22,How Airbnb designed and scaled its central authorization system - Himeji,https://www.youtube.com/watch?v=5FIPtC3xJSQ,1796,system-design,How Airbnb designed and scaled,
22,How Gojek masks and keeps users' phone numbers secure at scale?,https://www.youtube.com/watch?v=nEEaSZZ8R4I,981,system-design,How Gojek masks and keeps,
22,The architecture of Yelp's in-house Search Engine - nrtSearch,https://www.youtube.com/watch?v=i8MweKYoG1U,1487,system-design,The architecture of Yelp's in-house,
23,How Giphy uses CDN to serve 10 billion GIFs every day,https://www.youtube.com/watch?v=-bo7oVejgRM,993,"system-design,cache",How Giphy uses CDN to,
23,3. Writing a Simple TCP Echo Server | Redis Internals,https://www.youtube.com/watch?v=zlxdX9f4l50,985,"system-design,database",3. Writing a Simple TCP,
23,2. What Makes Redis Special? | Redis Internals,https://www.youtube.com/watch?v=h30k7YixrMo,1324,"system-design,database",2. What Makes Redis Special?,
23,1. Redis Internals Course Introduction and Announcement,https://www.youtube.com/watch?v=NXbOVLpage0,655,"system-design,database",1. Redis Internals Course Introduction,
23,How Dropbox efficiently serves and renders a large number of thumbnails,https://www.youtube.com/watch?v=FczWm6kx0Kg,1143,system-design,How Dropbox efficiently serves and,
23,Aggregating DynamoDB data in realtime to list restaurants at Deliveroo,https://www.youtube.com/watch?v=VNvTEin2liY,952,system-design,Aggregating DynamoDB data in realtime,
23,How Razorpay Designed and Scaled their Notification System,https://www.youtube.com/watch?v=DQwlmTvs6xA,1052,system-design,How Razorpay Designed and Scaled,
24,How Flipkart made their type ahead search hyper personalized,https://www.youtube.com/watch?v=NcNCty7_3kc,1140,system-design,How Flipkart made their type,
24,The Architecture of Pinterest's Time Series Database - Goku,https://www.youtube.com/watch?v=tZPTpa3JcKA,1073,"database,system-design",The Architecture of Pinterest's Time,
24,The Architecture of Airbnb's Knowledge Graph,https://www.youtube.com/watch?v=7xKgQmqkfD0,1006,system-design,The Architecture of Airbnb's Knowledge,
24,How Swiggy designed and scaled its chatbot,https://www.youtube.com/watch?v=W8LDyEOPaPY,911,system-design,How Swiggy designed and scaled,
24,How Instagram efficiently serves HashTags ordered by count,https://www.youtube.com/watch?v=CA2_0ZhVW2g,738,system-design,How Instagram efficiently serves HashTags,
24,Two Phase Commit to power Distributed Transactions in a Distributed System,https://www.youtube.com/watch?v=sZVCpjuVUL8,1007,system-design,Two Phase Commit to power,
24,Exponential Information Gathering (EIG) Algorithm for Byzantine Agreement,https://www.youtube.com/watch?v=pi3YA3m1ffw,818,system-design,Exponential Information Gathering (EIG) Algorithm,
25,Exponential Information Gathering (EIG) Algorithm - Distributed Consensus even when processes crash,https://www.youtube.com/watch?v=1g0L6ISxQPE,1246,system-design,Exponential Information Gathering (EIG) Algorithm,
25,FloodSet Algorithm - Distributed Consensus even when processes crash,https://www.youtube.com/watch?v=uS19mAa_tFA,974,system-design,FloodSet Algorithm - Distributed Consensus,
25,Unsolvable Distributed Consensus and The Two Generals' Problem,https://www.youtube.com/watch?v=DnOlqghKJMY,929,system-design,Unsolvable Distributed Consensus and The,
25,Minimum Spanning Tree in Distributed Systems - GHS Algorithm - and its Applications,https://www.youtube.com/watch?v=c5t1rP6CvNs,1993,system-design,Minimum Spanning Tree in Distributed,
25,Distributed Shortest-Path Bellman Ford Algorithm in Distributed Systems,https://www.youtube.com/watch?v=tV3EQNgpZKI,1025,system-design,Distributed Shortest-Path Bellman Ford Algorithm,
26,Synchronous Breadth First Search Algorithm to power broadcast in Distributed Systems,https://www.youtube.com/watch?v=PTlYBBqAYXA,1306,system-design,Synchronous Breadth First Search Algorithm,
26,FloodMax algorithm for Leader Election in Distributed Systems,https://www.youtube.com/watch?v=4aeFQpuww4E,761,system-design,FloodMax algorithm for Leader Election,
26,TimeSlice algorithm for Leader Election in Distributed Systems,https://www.youtube.com/watch?v=mcKLQVmCsG4,843,system-design,TimeSlice algorithm for Leader Election,
26,HS algorithm for Leader Election in Distributed Systems,https://www.youtube.com/watch?v=inzQQm-kXCo,1135,system-design,HS algorithm for Leader Election,
26,LCR algorithm for Leader Election in Distributed Systems,https://www.youtube.com/watch?v=NDBJr37dBzc,860,system-design,LCR algorithm for Leader Election,
26,Exploiting and stealing from the BitTorrent network,https://www.youtube.com/watch?v=nYtAzzH-twM,1115,system-design,Exploiting and stealing from the,
27,Kademlia - a Distributed Hash Table implementation | Paper Dissection and Deep-dive,https://www.youtube.com/watch?v=_kCHOpINA5g,2726,system-design,Kademlia - a Distributed Hash,
27,The Piece Selection algorithm that makes BitTorrent fault tolerant,https://www.youtube.com/watch?v=QSeex0YxReY,1398,system-design,The Piece Selection algorithm that,
27,The Choke Algorithm that powers BitTorrent,https://www.youtube.com/watch?v=iognYJRzCE8,2044,system-design,The Choke Algorithm that powers,
28,Overview of the BitTorrent architecture,https://www.youtube.com/watch?v=shVvFVFiZcs,1237,system-design,Overview of the BitTorrent architecture,
28,Understanding the Torrent File Format and Bencoding,https://www.youtube.com/watch?v=tHT94dSMwKw,1240,system-design,Understanding the Torrent File Format,
28,Introduction to BitTorrent and the problem it beautifully solves,https://www.youtube.com/watch?v=v7cR0ZolaUA,1164,system-design,Introduction to BitTorrent and the,
28,Implementing Hash Maps with Hash Tables,https://www.youtube.com/watch?v=VCMO2X6EoK0,1076,system-design,Implementing Hash Maps with Hash,
28,Implementing Hash Sets with Hash Tables,https://www.youtube.com/watch?v=CcoMvgIdrD8,874,system-design,Implementing Hash Sets with Hash,
28,Implementing Resize of a Hash Table,https://www.youtube.com/watch?v=mmPwVBm-8n0,1000,system-design,Implementing Resize of a Hash,
29,"When full, why are Hash tables, ArrayList, and Vectors always doubled? ⚡",https://www.youtube.com/watch?v=zt1E0akArqQ,1786,system-design,"When full, why are Hash",
29,Understanding the performance of a Hash Table,https://www.youtube.com/watch?v=oD2yaTtu69w,1508,"system-design,cache",Understanding the performance of a,
29,Double Hashing for Conflict Resolution in Hash Tables,https://www.youtube.com/watch?v=wV4K6fo0T58,1004,system-design,Double Hashing for Conflict Resolution,
29,Quadratic Probing for Conflict Resolution in Hash Tables,https://www.youtube.com/watch?v=F-8pWiJv8ik,875,system-design,Quadratic Probing for Conflict Resolution,
29,Linear Probing for Conflict Resolution in Hash Tables,https://www.youtube.com/watch?v=5QKAXG25hig,1163,system-design,Linear Probing for Conflict Resolution,
30,Conflict Resolution in Hash Tables with Open Addressing,https://www.youtube.com/watch?v=6_yFb7icd_c,1086,system-design,Conflict Resolution in Hash Tables,
30,Conflict Resolution in Hash Tables with Chaining,https://www.youtube.com/watch?v=9rb8oILi4lU,1255,system-design,Conflict Resolution in Hash Tables,
30,Internal Structure of a Hash Table,https://www.youtube.com/watch?v=jjW8w8ED3Ns,1392,"system-design,python",Internal Structure of a Hash,
30,Dissecting GitHub Outage and things to do after that,https://www.youtube.com/watch?v=LeT_s-UFw-U,984,"system-design,cache",Dissecting GitHub Outage and things,
30,Dissecting GitHub Outage - Why should we localize failures?,https://www.youtube.com/watch?v=Of3FS2qDM28,1233,"system-design,database",Dissecting GitHub Outage - Why,
31,Backend for Frontend Pattern in Microservices,https://www.youtube.com/watch?v=GCx0aouuEkU,1742,system-design,Backend for Frontend Pattern in,
31,Dissecting GitHub Outage - Multiple Leaders in Zookeeper Cluster,https://www.youtube.com/watch?v=bycFzB6yrK0,1269,"system-design,queue",Dissecting GitHub Outage - Multiple,
31,GitHub Outage  - How databases are managed in production,https://www.youtube.com/watch?v=4mVJQJbw6Vw,1421,"database,system-design",GitHub Outage - How databases,
31,Best practices that make microservices integration easy,https://www.youtube.com/watch?v=Wby0d9Li5Hw,848,"system-design,database",Best practices that make microservices,
31,Dissecting GitHub Outage - Downtime due to Rate Limiter,https://www.youtube.com/watch?v=VPZo8cO1HbI,971,system-design,Dissecting GitHub Outage - Downtime,
32,Dissecting GitHub Outage - Master failover failed,https://www.youtube.com/watch?v=ZirBDq1JwpY,1350,"system-design,database",Dissecting GitHub Outage - Master,
32,Things to remember while building Microservices,https://www.youtube.com/watch?v=xbtE9IF4yRc,1447,system-design,Things to remember while building,
32,Why should we have a standard way of building Microservices?,https://www.youtube.com/watch?v=0q61wIUmVDY,1430,system-design,Why should we have a,
32,10 Challenges in Adopting and Implementing Microservices,https://www.youtube.com/watch?v=yTSq6hJFmUg,1606,system-design,10 Challenges in Adopting and,
33,What are Microservices?,https://www.youtube.com/watch?v=qoAox0FGzRQ,1655,system-design,What are Microservices?,
33,Dissecting GitHub Outage - Downtime they thought was avoided,https://www.youtube.com/watch?v=9GHh_U-ud9U,1064,system-design,Dissecting GitHub Outage - Downtime,
33,API Composition Pattern in Microservices,https://www.youtube.com/watch?v=5pYLlYsy6fQ,1550,system-design,API Composition Pattern in Microservices,
33,Dissecting GitHub Outage Downtime due to creating an Index,https://www.youtube.com/watch?v=df2QgLW0QC4,1369,"system-design,database",Dissecting GitHub Outage Downtime due,
33,Dissecting GitHub Outage - Repository Creation Failed,https://www.youtube.com/watch?v=48YZzGi7QMk,1259,system-design,Dissecting GitHub Outage - Repository,
34,Database per Service Pattern in Microservices,https://www.youtube.com/watch?v=la2q1vFA5q0,1369,"database,system-design",Database per Service Pattern in,
34,Everything you need to know about REST,https://www.youtube.com/watch?v=uFGJVQvR59A,1580,system-design,Everything you need to know,
34,An in-depth introduction to Rolling Deployments,https://www.youtube.com/watch?v=9kjUG_yvVqM,1301,system-design,An in-depth introduction to Rolling,
34,Implementing Vertical Sharding,https://www.youtube.com/watch?v=9iAJjtvBwyI,1481,"system-design,database",Implementing Vertical Sharding,
34,Dissecting GitHub Outage: Downtime due to an Edge Case,https://www.youtube.com/watch?v=iqapVyfoFqc,1292,"system-design,database",Dissecting GitHub Outage: Downtime due,
35,Why caching would not speed up Mark-and-Sweep GC?,https://www.youtube.com/watch?v=LkympMbgmCo,1423,"system-design,cache",Why caching would not speed,
35,An in-depth introduction to Blue Green Deployments,https://www.youtube.com/watch?v=W6HANd8c9t4,1735,system-design,An in-depth introduction to Blue,
35,An in-depth introduction to Canary Deployments,https://www.youtube.com/watch?v=nnseeKxovaM,1433,system-design,An in-depth introduction to Canary,
35,Introduction to RPC - Remote Procedure Calls,https://www.youtube.com/watch?v=eRndYq8iTio,1985,system-design,Introduction to RPC - Remote,
36,Designing Workflows in Microservices - Orchestration vs Choreography,https://www.youtube.com/watch?v=HiwOx-W1TIA,1046,system-design,Designing Workflows in Microservices -,
36,Dissecting GitHub Outage - Downtime due to ALTER TABLE,https://www.youtube.com/watch?v=82Xywy74kfE,2204,"system-design,database",Dissecting GitHub Outage - Downtime,
36,Tricolor Abstraction to build concurrent Garbage Collectors,https://www.youtube.com/watch?v=lhrRwjVPXPo,1192,system-design,Tricolor Abstraction to build concurrent,
36,Synchronous and Asynchronous Communication between Microservices,https://www.youtube.com/watch?v=ewUw0sUxHI4,2410,system-design,Synchronous and Asynchronous Communication between,
37,Introduction to Serverless Computing and Architecture,https://www.youtube.com/watch?v=oiZH5U_a0pg,2183,system-design,Introduction to Serverless Computing and,
37,Mark and Sweep Garbage Collection Algorithm,https://www.youtube.com/watch?v=4qLf0FJMyf0,1423,system-design,Mark and Sweep Garbage Collection,
37,Shared Database Pattern in Microservices,https://www.youtube.com/watch?v=tV11trlimLk,1281,"database,system-design",Shared Database Pattern in Microservices,
37,Database Sharding and Partitioning,https://www.youtube.com/watch?v=wXvljefXyEo,1433,"database,system-design",Database Sharding and Partitioning,
38,How to pick a garbage collector?,https://www.youtube.com/watch?v=IojMqbegejk,1597,system-design,How to pick a garbage,
38,How to scope a microservice?,https://www.youtube.com/watch?v=nfkdKHcKxbE,1143,system-design,How to scope a microservice?,
38,How to Protect Your Systems with Throttling & Rate Limiting - 5 Real-World Use Cases,https://www.youtube.com/watch?v=CW4gVlU0xtU,1145,system-design,How to Protect Your Systems,
38,An Engineering Deep-dive Into Atlassian's Mega Outage of April 2022,https://www.youtube.com/watch?v=xa-hMF8gku0,1884,system-design,An Engineering Deep-dive Into Atlassian's,
38,How to approach System Design?,https://www.youtube.com/watch?v=1r9bPisYaOQ,835,system-design,How to approach System Design?,
39,Why Do Programming Languages Need Garbage Collection?,https://www.youtube.com/watch?v=jcMxuLZCcqU,1015,system-design,Why Do Programming Languages Need,
39,Should You Adopt Microservices? Here’s What You Need to Know,https://www.youtube.com/watch?v=JPj6mhVLQN0,858,system-design,Should You Adopt Microservices? Here’s,
39,Build a robust Payments service using Idempotency Keys,https://www.youtube.com/watch?v=m6DtqSb1BDM,996,system-design,Build a robust Payments service,
39,Yes! You can send a payload in your HTTP GET requests,https://www.youtube.com/watch?v=8S4k7k_f9Sk,720,"system-design,python",Yes! You can send a,
39,Dissecting Google Maps Outage: Bad Rollout and Cascading Failures,https://www.youtube.com/watch?v=6oJaZbQKnJE,1217,system-design,Dissecting Google Maps Outage: Bad,
39,Implementing Distributed Transactions using Two Phase Commit Protocol,https://www.youtube.com/watch?v=oMhESvU87jM,2364,system-design,Implementing Distributed Transactions using Two,
40,Distributed Transactions: Two-Phase Commit Protocol,https://www.youtube.com/watch?v=7FgU1D4EnpQ,1281,system-design,Distributed Transactions: Two-Phase Commit Protocol,
40,What are Embedded Databases and why do they exist?,https://www.youtube.com/watch?v=xELqRiovEcI,957,"database,system-design",What are Embedded Databases and,
40,What happens when ID column reaches its max value - Dissecting GitHub Outage,https://www.youtube.com/watch?v=ZFRAFTn0cQ0,1474,"system-design,database",What happens when ID column,
40,How does the database guarantee reliability using write-ahead logging?,https://www.youtube.com/watch?v=wI4hKwl1Cn4,1326,"database,system-design",How does the database guarantee,
40,How to safely and gracefully handle timeouts in a microservices,https://www.youtube.com/watch?v=Hxja4crycBg,1418,"system-design,database",How to safely and gracefully,
41,How do indexes make databases read faster?,https://www.youtube.com/watch?v=3G293is403I,1405,"database,system-design",How do indexes make databases,
41,How to handle database outages?,https://www.youtube.com/watch?v=UT_TVldzA64,1838,"database,system-design",How to handle database outages?,
41,"Dissecting Spotify's Global Outage - March 8, 2022",https://www.youtube.com/watch?v=h5hXivWws7k,1560,system-design,Dissecting Spotify's Global Outage -,
41,The Worst Sorting Algorithm Ever!,https://www.youtube.com/watch?v=TzxLYTC8HL8,689,python,The Worst Sorting Algorithm Ever!,
41,"How ""is"" operator is implemented in python?",https://www.youtube.com/watch?v=Q8luYnxiFFE,1152,python,"How ""is"" operator is implemented",
42,How id() function is implemented in python?,https://www.youtube.com/watch?v=IGLnxdmJu2c,646,"python,system-design",How id() function is implemented,
42,How python compares a float and an int objects?,https://www.youtube.com/watch?v=u4tfIy--4GM,1234,"python,system-design",How python compares a float,
42,How python optimizes integers?,https://www.youtube.com/watch?v=6mhXGEXRXG0,940,python,How python optimizes integers?,
42,Live Coding Sierpinski Triangle in p5.js,https://www.youtube.com/watch?v=e3Ll0_oxChU,806,general,Live Coding Sierpinski Triangle in,
42,Flood fill Algorithm with Visualization in Python,https://www.youtube.com/watch?v=Rnp81O-6Lmo,616,python,Flood fill Algorithm with Visualization,
42,Sum of digits of a number using recursion in Python,https://www.youtube.com/watch?v=9O3hBiCMAfM,358,python,Sum of digits of a,
42,Summation of a list of numbers using Divide and Conquer in Python,https://www.youtube.com/watch?v=qES2lKTzkcg,342,python,Summation of a list of,
42,Summation of a list of numbers using recursion in Python,https://www.youtube.com/watch?v=gEiowafkkhM,419,python,Summation of a list of,
42,Scaling Taxonomy Service and Database,https://www.youtube.com/watch?v=dTPh3KcKPYo,518,"database,python,system-design",Scaling Taxonomy Service and Database,
43,How python implements chained comparison operators?,https://www.youtube.com/watch?v=zz2Lu5ht_jA,1845,"python,system-design",How python implements chained comparison,
43,How to design Udemy like taxonomy/hierarchy?,https://www.youtube.com/watch?v=4_jlmX_oB94,2115,"system-design,database",How to design Udemy like,
43,How python optimizes strings using String Interning?,https://www.youtube.com/watch?v=QpGK69LzfpY,1828,"python,system-design",How python optimizes strings using,
44,5 million + random rows in less than 100 seconds using SQL,https://www.youtube.com/watch?v=x1XmcuosZNk,1563,"system-design,database",5 million + random rows,
44,Changing python grammar to support standalone walrus assignments,https://www.youtube.com/watch?v=rWb7VYz1q1U,1342,"python,system-design",Changing python grammar to support,
44,End-to-end Message Encryption,https://www.youtube.com/watch?v=m_7xSIhxZL8,957,system-design,End-to-end Message Encryption,
44,Setting up cpython locally and making your first change,https://www.youtube.com/watch?v=k5isLG6vqss,392,python,Setting up cpython locally and,
44,Series Introduction: The Honest Python,https://www.youtube.com/watch?v=E-3J8X5DulY,40,python,Series Introduction: The Honest Python,
44,Designing Notifications Service for Instagram,https://www.youtube.com/watch?v=kIP8L-CSl2Y,2238,system-design,Designing Notifications Service for Instagram,
